Agda2> (agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking ExtendedLambdaCase (ExtendedLambdaCase.agda).\n" t)
(agda2-info-action "*Type-checking*" "Finished ExtendedLambdaCase.\n" t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool\n?1 : Bool\n?2 : Bool\n?3 : Bool\n?4 : {A : Set} → A → {A} → A → A\n" nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
Agda2> Agda2> Agda2> (agda2-status-action "")
(agda2-info-action "*Normal Form*" "(y : Bool) →\nparameterised.Bar (λ _ → Void) ((λ {true → true; false → false}) y)" nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
Agda2> Agda2> Agda2> (agda2-give-action 4 "λ {a {x} b → a}")
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool\n?1 : Bool\n?2 : Bool\n?3 : Bool\n" nil)
((last . 1) . (agda2-goals-action '(0 1 2 3)))
Agda2> Agda2> Agda2> (agda2-status-action "ShowImplicit")
((last . 1) . (agda2-goals-action '(0 1 2 3)))
Agda2> ((last . 2) . (agda2-make-case-action-extendlam '("true {w} → ?" "false {w} → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
Agda2> ((last . 2) . (agda2-make-case-action-extendlam '("z {true} → ?" "z {false} → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
Agda2> (agda2-status-action "")
((last . 1) . (agda2-goals-action '(0 1 2 3)))
Agda2> Agda2> Agda2> ((last . 2) . (agda2-make-case-action-extendlam '("true → ?" "false → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
Agda2> (agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking ExtendedLambdaCase (ExtendedLambdaCase.agda).\n" t)
(agda2-info-action "*Type-checking*" "Finished ExtendedLambdaCase.\n" t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool\n?1 : Bool\n?2 : Bool\n?3 : Bool\n?4 : {A : Set} → A → {A} → A → A\n" nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
Agda2> (agda2-status-action "ShowImplicit")
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
Agda2> ((last . 2) . (agda2-make-case-action-extendlam '("true → ?" "false → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
Agda2> Agda2> Agda2> Agda2> ((last . 2) . (agda2-make-case-action-extendlam '("true → ?" "false → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
Agda2> Agda2> Agda2> ((last . 2) . (agda2-make-case-action-extendlam '("true z → ?" "false z → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4)))
Agda2> Agda2> 